generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model developer {
  id            Int          @id @default(autoincrement())
  first_name    String       @default("")
  middle_name   String       @default("")
  last_name     String       @default("")
  suffix        String       @default("")
  role          String       @default("")
  team_id       Int?
  skill_sets_id Int?
  points        Int          @default(0)
  email         String       @default("")
  mobile_no     String       @default("")
  team          team?        @relation(fields: [team_id], references: [id])
  skill_sets    skill_sets[]

  @@index([team_id], map: "developer_teamId_fkey")
}

model projects {
  id          Int       @id @default(autoincrement())
  description String    @default("")
  status_id   Int
  start_date  DateTime?
  end_date    DateTime?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
  team_id     Int?
  user_id     Int?
  status      status    @relation(fields: [status_id], references: [id])
  team        team?     @relation(fields: [team_id], references: [id])
  user        user?     @relation(fields: [user_id], references: [id])

  @@index([status_id], map: "projects_status_id_fkey")
  @@index([team_id], map: "projects_team_id_fkey")
  @@index([user_id], map: "projects_userId_fkey")
}

model skill {
  id          Int          @id @default(autoincrement())
  title       String       @default("")
  description String       @default("")
  created_at  DateTime     @default(now())
  updated_at  DateTime     @default(now())
  skill_sets  skill_sets[]
}

model skill_sets {
  id           Int        @id @default(autoincrement())
  skill_id     Int
  created_at   DateTime   @default(now())
  updated_at   DateTime   @default(now())
  developer_id Int?
  developer    developer? @relation(fields: [developer_id], references: [id])
  skill        skill      @relation(fields: [skill_id], references: [id])

  @@index([developer_id], map: "skill_sets_developer_id_fkey")
  @@index([skill_id], map: "skill_sets_skill_id_fkey")
}

model status {
  id         Int        @id @default(autoincrement())
  title      String     @default("")
  created_at DateTime   @default(now())
  updated_at DateTime   @default(now())
  projects   projects[]
}

model task {
  id             Int      @id @default(autoincrement())
  decription     String   @default("")
  priority_level String   @default("")
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now())
  user_id        Int?
  user           user?    @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "task_userId_fkey")
}

model team {
  id          Int         @id @default(autoincrement())
  description String      @default("")
  created_at  DateTime    @default(now())
  updated_at  DateTime    @default(now())
  developer   developer[]
  projects    projects[]
}

model user {
  id            Int        @id @default(autoincrement())
  first_name    String     @default("")
  middle_name   String     @default("")
  last_name     String     @default("")
  suffix        String     @default("")
  created_at    DateTime   @default(now())
  updated_at    DateTime   @default(now())
  email_address String     @default("")
  password      String     @unique @default("")
  mobile_no     String     @default("")
  projects      projects[]
  task          task[]
}
